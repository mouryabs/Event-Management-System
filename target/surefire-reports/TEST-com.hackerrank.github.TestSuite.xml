<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="21" failures="6" name="com.hackerrank.github.TestSuite" time="3.12" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="13.0.1+9"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/openjdk-13.0.1.jdk/Contents/Home/lib"/>
    <property name="maven.multiModuleProjectDirectory" value="/Users/mourya/Desktop/9065820e-7232-423d-b833-530dd938d296"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="test" value="TestSuite"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/Users/mourya/Desktop/9065820e-7232-423d-b833-530dd938d296"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="java.runtime.version" value="13.0.1+9"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.io.tmpdir" value="/var/folders/9l/1qzqvxsn32j9w2h607_0yqf40000gn/T/"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="classworlds.conf" value="/usr/local/Cellar/maven/3.6.3/libexec/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/mourya/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="maven.conf" value="/usr/local/Cellar/maven/3.6.3/libexec/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="57.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.15.6"/>
    <property name="library.jansi.path" value="/usr/local/Cellar/maven/3.6.3/libexec/lib/jansi-native"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="user.home" value="/Users/mourya"/>
    <property name="user.timezone" value="America/New_York"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="13"/>
    <property name="user.name" value="mourya"/>
    <property name="java.class.path" value="/usr/local/Cellar/maven/3.6.3/libexec/boot/plexus-classworlds-2.6.0.jar"/>
    <property name="java.vm.specification.version" value="13"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean test -Dtest=TestSuite"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/openjdk-13.0.1.jdk/Contents/Home"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="13.0.1"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/local/Cellar/maven/3.6.3/libexec"/>
    <property name="file.separator" value="/"/>
    <property name="java.version.date" value="2019-10-15"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
  </properties>
  <testcase classname="com.hackerrank.github.requests.EventsControllerTest" name="createEvent" time="2.952"/>
  <testcase classname="com.hackerrank.github.requests.EventsControllerTest" name="createEventWithExistingId" time="0.002"/>
  <testcase classname="com.hackerrank.github.requests.EventsControllerTest" name="findEventById" time="0.052">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at com.hackerrank.github.requests.EventsControllerTest.findEventById(EventsControllerTest.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks.evaluate(RunPrepareTestInstanceCallbacks.java:64)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.springframework.test.context.junit4.statements.SpringFailOnTimeout.evaluate(SpringFailOnTimeout.java:87)
	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)
	at org.springframework.test.context.junit4.rules.SpringClassRule$TestContextManagerCacheEvictor.evaluate(SpringClassRule.java:190)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</failure>
    <system-out>&amp;#27;[0;31mExpected &lt;{&quot;id&quot;: 1, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 3, &quot;login&quot;: &quot;christinelewis&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/christinelewis&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-28 01:29:02&quot;}&gt; but was &lt;{&quot;id&quot;:1,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:3,&quot;login&quot;:&quot;christinelewis&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}&gt;.&amp;#27;[0m

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 1, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 3, &quot;login&quot;: &quot;christinelewis&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/christinelewis&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-28 01:29:02&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 2, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 2, &quot;login&quot;: &quot;samantha41&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/samantha41&quot;}, &quot;repo&quot;: {&quot;id&quot;: 2, &quot;name&quot;: &quot;padilla/magnam&quot;, &quot;url&quot;: &quot;https://github.com/padilla/magnam&quot;}, &quot;created_at&quot;: &quot;2018-12-29 20:31:36&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 3, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 1, &quot;login&quot;: &quot;michael14&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/michael14&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-31 00:02:09&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 4, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 1, &quot;login&quot;: &quot;michael14&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/michael14&quot;}, &quot;repo&quot;: {&quot;id&quot;: 2, &quot;name&quot;: &quot;padilla/magnam&quot;, &quot;url&quot;: &quot;https://github.com/padilla/magnam&quot;}, &quot;created_at&quot;: &quot;2018-12-31 16:18:49&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 1, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 3, &quot;login&quot;: &quot;christinelewis&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/christinelewis&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-28 01:29:02&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {&quot;id&quot;:1,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:3,&quot;login&quot;:&quot;christinelewis&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

&amp;#27;[0;31mfindEventById(com.hackerrank.github.requests.EventsControllerTest)&amp;#27;[0m
&amp;#27;[0;31mjava.lang.AssertionError&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.Assert.fail(Assert.java:86)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.Assert.assertTrue(Assert.java:41)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.Assert.assertTrue(Assert.java:52)&amp;#27;[0m
&amp;#27;[0;31m	at com.hackerrank.github.requests.EventsControllerTest.findEventById(EventsControllerTest.java:255)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/java.lang.reflect.Method.invoke(Method.java:567)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks.evaluate(RunPrepareTestInstanceCallbacks.java:64)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.SpringFailOnTimeout.evaluate(SpringFailOnTimeout.java:87)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.RunRules.evaluate(RunRules.java:20)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.rules.SpringClassRule$TestContextManagerCacheEvictor.evaluate(SpringClassRule.java:190)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.RunRules.evaluate(RunRules.java:20)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.Suite.runChild(Suite.java:128)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.Suite.runChild(Suite.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/java.lang.reflect.Method.invoke(Method.java:567)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="com.hackerrank.github.requests.EventsControllerTest" name="findEventByNonExistingId" time="0"/>
  <testcase classname="com.hackerrank.github.requests.EventsControllerTest" name="findAllEventsByRepoId" time="0.016">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at com.hackerrank.github.requests.EventsControllerTest.findAllEventsByRepoId(EventsControllerTest.java:332)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks.evaluate(RunPrepareTestInstanceCallbacks.java:64)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.springframework.test.context.junit4.statements.SpringFailOnTimeout.evaluate(SpringFailOnTimeout.java:87)
	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)
	at org.springframework.test.context.junit4.rules.SpringClassRule$TestContextManagerCacheEvictor.evaluate(SpringClassRule.java:190)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</failure>
    <system-out>&amp;#27;[0;31mExpected &lt;{&quot;id&quot;:1,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:3,&quot;login&quot;:&quot;christinelewis&quot;,&quot;avatar_url&quot;:&quot;https://avatars.com/christinelewis&quot;},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;created_at&quot;:&quot;2018-12-28 01:29:02&quot;}&gt; but was &lt;{&quot;id&quot;:1,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:3,&quot;login&quot;:&quot;christinelewis&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}&gt; (at index 0).&amp;#27;[0m

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 1, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 3, &quot;login&quot;: &quot;christinelewis&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/christinelewis&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-28 01:29:02&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 2, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 2, &quot;login&quot;: &quot;samantha41&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/samantha41&quot;}, &quot;repo&quot;: {&quot;id&quot;: 2, &quot;name&quot;: &quot;padilla/magnam&quot;, &quot;url&quot;: &quot;https://github.com/padilla/magnam&quot;}, &quot;created_at&quot;: &quot;2018-12-29 20:31:36&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 3, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 1, &quot;login&quot;: &quot;michael14&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/michael14&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-31 00:02:09&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 4, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 1, &quot;login&quot;: &quot;michael14&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/michael14&quot;}, &quot;repo&quot;: {&quot;id&quot;: 2, &quot;name&quot;: &quot;padilla/magnam&quot;, &quot;url&quot;: &quot;https://github.com/padilla/magnam&quot;}, &quot;created_at&quot;: &quot;2018-12-31 16:18:49&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 1, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 3, &quot;login&quot;: &quot;christinelewis&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/christinelewis&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-28 01:29:02&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {&quot;id&quot;:1,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:3,&quot;login&quot;:&quot;christinelewis&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/5
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyRepoId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{&quot;id&quot;:1,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:3,&quot;login&quot;:&quot;christinelewis&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null},{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

&amp;#27;[0;31mfindAllEventsByRepoId(com.hackerrank.github.requests.EventsControllerTest)&amp;#27;[0m
&amp;#27;[0;31mjava.lang.AssertionError&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.Assert.fail(Assert.java:86)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.Assert.assertTrue(Assert.java:41)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.Assert.assertTrue(Assert.java:52)&amp;#27;[0m
&amp;#27;[0;31m	at com.hackerrank.github.requests.EventsControllerTest.findAllEventsByRepoId(EventsControllerTest.java:332)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/java.lang.reflect.Method.invoke(Method.java:567)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks.evaluate(RunPrepareTestInstanceCallbacks.java:64)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.SpringFailOnTimeout.evaluate(SpringFailOnTimeout.java:87)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.RunRules.evaluate(RunRules.java:20)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.rules.SpringClassRule$TestContextManagerCacheEvictor.evaluate(SpringClassRule.java:190)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.RunRules.evaluate(RunRules.java:20)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.Suite.runChild(Suite.java:128)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.Suite.runChild(Suite.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/java.lang.reflect.Method.invoke(Method.java:567)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="com.hackerrank.github.requests.EventsControllerTest" name="findAllEventsByNonExistingRepoId" time="0"/>
  <testcase classname="com.hackerrank.github.requests.EventsControllerTest" name="findAllEventsByActorId" time="0.021">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at com.hackerrank.github.requests.EventsControllerTest.findAllEventsByActorId(EventsControllerTest.java:409)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks.evaluate(RunPrepareTestInstanceCallbacks.java:64)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.springframework.test.context.junit4.statements.SpringFailOnTimeout.evaluate(SpringFailOnTimeout.java:87)
	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)
	at org.springframework.test.context.junit4.rules.SpringClassRule$TestContextManagerCacheEvictor.evaluate(SpringClassRule.java:190)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</failure>
    <system-out>&amp;#27;[0;31mExpected &lt;{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar_url&quot;:&quot;https://avatars.com/michael14&quot;},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;created_at&quot;:&quot;2018-12-31 00:02:09&quot;}&gt; but was &lt;{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}&gt; (at index 0).&amp;#27;[0m

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 1, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 3, &quot;login&quot;: &quot;christinelewis&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/christinelewis&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-28 01:29:02&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 2, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 2, &quot;login&quot;: &quot;samantha41&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/samantha41&quot;}, &quot;repo&quot;: {&quot;id&quot;: 2, &quot;name&quot;: &quot;padilla/magnam&quot;, &quot;url&quot;: &quot;https://github.com/padilla/magnam&quot;}, &quot;created_at&quot;: &quot;2018-12-29 20:31:36&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 3, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 1, &quot;login&quot;: &quot;michael14&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/michael14&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-31 00:02:09&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 4, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 1, &quot;login&quot;: &quot;michael14&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/michael14&quot;}, &quot;repo&quot;: {&quot;id&quot;: 2, &quot;name&quot;: &quot;padilla/magnam&quot;, &quot;url&quot;: &quot;https://github.com/padilla/magnam&quot;}, &quot;created_at&quot;: &quot;2018-12-31 16:18:49&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 1, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 3, &quot;login&quot;: &quot;christinelewis&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/christinelewis&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-28 01:29:02&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {&quot;id&quot;:1,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:3,&quot;login&quot;:&quot;christinelewis&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/5
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyRepoId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{&quot;id&quot;:1,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:3,&quot;login&quot;:&quot;christinelewis&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null},{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/3
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyRepoId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/actors/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null},{&quot;id&quot;:4,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:2,&quot;name&quot;:&quot;padilla/magnam&quot;,&quot;url&quot;:&quot;https://github.com/padilla/magnam&quot;},&quot;createdAt&quot;:null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

&amp;#27;[0;31mfindAllEventsByActorId(com.hackerrank.github.requests.EventsControllerTest)&amp;#27;[0m
&amp;#27;[0;31mjava.lang.AssertionError&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.Assert.fail(Assert.java:86)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.Assert.assertTrue(Assert.java:41)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.Assert.assertTrue(Assert.java:52)&amp;#27;[0m
&amp;#27;[0;31m	at com.hackerrank.github.requests.EventsControllerTest.findAllEventsByActorId(EventsControllerTest.java:409)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/java.lang.reflect.Method.invoke(Method.java:567)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks.evaluate(RunPrepareTestInstanceCallbacks.java:64)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.SpringFailOnTimeout.evaluate(SpringFailOnTimeout.java:87)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.RunRules.evaluate(RunRules.java:20)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.rules.SpringClassRule$TestContextManagerCacheEvictor.evaluate(SpringClassRule.java:190)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.RunRules.evaluate(RunRules.java:20)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.Suite.runChild(Suite.java:128)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.Suite.runChild(Suite.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/java.lang.reflect.Method.invoke(Method.java:567)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="com.hackerrank.github.requests.EventsControllerTest" name="findAllEventsByNonExistingActorId" time="0"/>
  <testcase classname="com.hackerrank.github.requests.EventsControllerTest" name="findAllEventsByRepoIdAndActorId" time="0.017">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at com.hackerrank.github.requests.EventsControllerTest.findAllEventsByRepoIdAndActorId(EventsControllerTest.java:471)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks.evaluate(RunPrepareTestInstanceCallbacks.java:64)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.springframework.test.context.junit4.statements.SpringFailOnTimeout.evaluate(SpringFailOnTimeout.java:87)
	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)
	at org.springframework.test.context.junit4.rules.SpringClassRule$TestContextManagerCacheEvictor.evaluate(SpringClassRule.java:190)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</failure>
    <system-out>&amp;#27;[0;31mExpected &lt;{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar_url&quot;:&quot;https://avatars.com/michael14&quot;},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;created_at&quot;:&quot;2018-12-31 00:02:09&quot;}&gt; but was &lt;{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}&gt; (at index 0).&amp;#27;[0m

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 1, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 3, &quot;login&quot;: &quot;christinelewis&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/christinelewis&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-28 01:29:02&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 2, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 2, &quot;login&quot;: &quot;samantha41&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/samantha41&quot;}, &quot;repo&quot;: {&quot;id&quot;: 2, &quot;name&quot;: &quot;padilla/magnam&quot;, &quot;url&quot;: &quot;https://github.com/padilla/magnam&quot;}, &quot;created_at&quot;: &quot;2018-12-29 20:31:36&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 3, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 1, &quot;login&quot;: &quot;michael14&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/michael14&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-31 00:02:09&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 4, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 1, &quot;login&quot;: &quot;michael14&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/michael14&quot;}, &quot;repo&quot;: {&quot;id&quot;: 2, &quot;name&quot;: &quot;padilla/magnam&quot;, &quot;url&quot;: &quot;https://github.com/padilla/magnam&quot;}, &quot;created_at&quot;: &quot;2018-12-31 16:18:49&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 1, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 3, &quot;login&quot;: &quot;christinelewis&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/christinelewis&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-28 01:29:02&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {&quot;id&quot;:1,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:3,&quot;login&quot;:&quot;christinelewis&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/5
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyRepoId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{&quot;id&quot;:1,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:3,&quot;login&quot;:&quot;christinelewis&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null},{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/3
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyRepoId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/actors/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null},{&quot;id&quot;:4,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:2,&quot;name&quot;:&quot;padilla/magnam&quot;,&quot;url&quot;:&quot;https://github.com/padilla/magnam&quot;},&quot;createdAt&quot;:null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/actors/4
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/1/actors/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorAndRepoId(java.lang.Long,java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

&amp;#27;[0;31mfindAllEventsByRepoIdAndActorId(com.hackerrank.github.requests.EventsControllerTest)&amp;#27;[0m
&amp;#27;[0;31mjava.lang.AssertionError&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.Assert.fail(Assert.java:86)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.Assert.assertTrue(Assert.java:41)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.Assert.assertTrue(Assert.java:52)&amp;#27;[0m
&amp;#27;[0;31m	at com.hackerrank.github.requests.EventsControllerTest.findAllEventsByRepoIdAndActorId(EventsControllerTest.java:471)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/java.lang.reflect.Method.invoke(Method.java:567)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks.evaluate(RunPrepareTestInstanceCallbacks.java:64)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.SpringFailOnTimeout.evaluate(SpringFailOnTimeout.java:87)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.RunRules.evaluate(RunRules.java:20)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.rules.SpringClassRule$TestContextManagerCacheEvictor.evaluate(SpringClassRule.java:190)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.RunRules.evaluate(RunRules.java:20)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.Suite.runChild(Suite.java:128)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.Suite.runChild(Suite.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/java.lang.reflect.Method.invoke(Method.java:567)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="com.hackerrank.github.requests.EventsControllerTest" name="findAllEventsByNonExistingRepoIdAndNonExistingActorId" time="0"/>
  <testcase classname="com.hackerrank.github.requests.EventsControllerTest" name="findAllEventsByNonExistingRepoIdAndActorId" time="0"/>
  <testcase classname="com.hackerrank.github.requests.EventsControllerTest" name="findAllEventsByRepoIdAndNonExistingActorId" time="0"/>
  <testcase classname="com.hackerrank.github.requests.EventsControllerTest" name="findAllEvents" time="0.022">
    <failure message="Status expected:&lt;200&gt; but was:&lt;405&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Status expected:&lt;200&gt; but was:&lt;405&gt;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:55)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:82)
	at org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:619)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:195)
	at com.hackerrank.github.requests.EventsControllerTest.findAllEvents(EventsControllerTest.java:615)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks.evaluate(RunPrepareTestInstanceCallbacks.java:64)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.springframework.test.context.junit4.statements.SpringFailOnTimeout.evaluate(SpringFailOnTimeout.java:87)
	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)
	at org.springframework.test.context.junit4.rules.SpringClassRule$TestContextManagerCacheEvictor.evaluate(SpringClassRule.java:190)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</failure>
    <system-out>2020-09-20 18:59:54.919  WARN 91393 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method &apos;GET&apos; not supported]

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 1, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 3, &quot;login&quot;: &quot;christinelewis&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/christinelewis&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-28 01:29:02&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 2, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 2, &quot;login&quot;: &quot;samantha41&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/samantha41&quot;}, &quot;repo&quot;: {&quot;id&quot;: 2, &quot;name&quot;: &quot;padilla/magnam&quot;, &quot;url&quot;: &quot;https://github.com/padilla/magnam&quot;}, &quot;created_at&quot;: &quot;2018-12-29 20:31:36&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 3, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 1, &quot;login&quot;: &quot;michael14&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/michael14&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-31 00:02:09&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 4, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 1, &quot;login&quot;: &quot;michael14&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/michael14&quot;}, &quot;repo&quot;: {&quot;id&quot;: 2, &quot;name&quot;: &quot;padilla/magnam&quot;, &quot;url&quot;: &quot;https://github.com/padilla/magnam&quot;}, &quot;created_at&quot;: &quot;2018-12-31 16:18:49&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 1, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 3, &quot;login&quot;: &quot;christinelewis&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/christinelewis&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-28 01:29:02&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {&quot;id&quot;:1,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:3,&quot;login&quot;:&quot;christinelewis&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/5
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyRepoId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{&quot;id&quot;:1,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:3,&quot;login&quot;:&quot;christinelewis&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null},{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/3
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyRepoId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/actors/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null},{&quot;id&quot;:4,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:2,&quot;name&quot;:&quot;padilla/magnam&quot;,&quot;url&quot;:&quot;https://github.com/padilla/magnam&quot;},&quot;createdAt&quot;:null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/actors/4
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/1/actors/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorAndRepoId(java.lang.Long,java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/4/actors/5
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorAndRepoId(java.lang.Long,java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/4/actors/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorAndRepoId(java.lang.Long,java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/1/actors/5
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorAndRepoId(java.lang.Long,java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method &apos;GET&apos; not supported
          Headers = {Allow=[POST]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

&amp;#27;[0;31mfindAllEvents(com.hackerrank.github.requests.EventsControllerTest)&amp;#27;[0m
&amp;#27;[0;31mjava.lang.AssertionError: Status expected:&lt;200&gt; but was:&lt;405&gt;&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:55)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:82)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:619)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:195)&amp;#27;[0m
&amp;#27;[0;31m	at com.hackerrank.github.requests.EventsControllerTest.findAllEvents(EventsControllerTest.java:615)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/java.lang.reflect.Method.invoke(Method.java:567)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks.evaluate(RunPrepareTestInstanceCallbacks.java:64)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.SpringFailOnTimeout.evaluate(SpringFailOnTimeout.java:87)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.RunRules.evaluate(RunRules.java:20)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.rules.SpringClassRule$TestContextManagerCacheEvictor.evaluate(SpringClassRule.java:190)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.RunRules.evaluate(RunRules.java:20)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.Suite.runChild(Suite.java:128)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.Suite.runChild(Suite.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/java.lang.reflect.Method.invoke(Method.java:567)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="com.hackerrank.github.requests.ResourcesControllerTest" name="eraseAllRecords" time="0.004"/>
  <testcase classname="com.hackerrank.github.requests.NoResourcesEventsControllerTest" name="findAllEvents" time="0.026">
    <failure message="Status expected:&lt;200&gt; but was:&lt;405&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Status expected:&lt;200&gt; but was:&lt;405&gt;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:55)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:82)
	at org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:619)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:195)
	at com.hackerrank.github.requests.NoResourcesEventsControllerTest.findAllEvents(NoResourcesEventsControllerTest.java:74)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks.evaluate(RunPrepareTestInstanceCallbacks.java:64)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.springframework.test.context.junit4.statements.SpringFailOnTimeout.evaluate(SpringFailOnTimeout.java:87)
	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)
	at org.springframework.test.context.junit4.rules.SpringClassRule$TestContextManagerCacheEvictor.evaluate(SpringClassRule.java:190)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</failure>
    <system-out>2020-09-20 18:59:54.969  INFO 91393 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.hackerrank.github.requests.NoResourcesEventsControllerTest], using SpringBootContextLoader
2020-09-20 18:59:54.970  INFO 91393 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.hackerrank.github.requests.NoResourcesEventsControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-09-20 18:59:54.970  INFO 91393 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.hackerrank.github.requests.NoResourcesEventsControllerTest]: NoResourcesEventsControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-09-20 18:59:54.972  INFO 91393 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.hackerrank.github.Application for test class com.hackerrank.github.requests.NoResourcesEventsControllerTest
2020-09-20 18:59:54.972  INFO 91393 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener]
2020-09-20 18:59:54.973  INFO 91393 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@24018c8b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4cf230bf, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3dc55719, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@64665781, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4c2bea52, org.springframework.test.context.transaction.TransactionalTestExecutionListener@11015ca0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ebbc06, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@50672905, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@430d3021, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@58f290bc, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3220c28, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6ae42248]
2020-09-20 18:59:54.976  WARN 91393 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method &apos;GET&apos; not supported]

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 1, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 3, &quot;login&quot;: &quot;christinelewis&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/christinelewis&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-28 01:29:02&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 2, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 2, &quot;login&quot;: &quot;samantha41&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/samantha41&quot;}, &quot;repo&quot;: {&quot;id&quot;: 2, &quot;name&quot;: &quot;padilla/magnam&quot;, &quot;url&quot;: &quot;https://github.com/padilla/magnam&quot;}, &quot;created_at&quot;: &quot;2018-12-29 20:31:36&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 3, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 1, &quot;login&quot;: &quot;michael14&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/michael14&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-31 00:02:09&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 4, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 1, &quot;login&quot;: &quot;michael14&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/michael14&quot;}, &quot;repo&quot;: {&quot;id&quot;: 2, &quot;name&quot;: &quot;padilla/magnam&quot;, &quot;url&quot;: &quot;https://github.com/padilla/magnam&quot;}, &quot;created_at&quot;: &quot;2018-12-31 16:18:49&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /events
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {&quot;id&quot;: 1, &quot;type&quot;: &quot;PushEvent&quot;, &quot;actor&quot;: {&quot;id&quot;: 3, &quot;login&quot;: &quot;christinelewis&quot;, &quot;avatar_url&quot;: &quot;https://avatars.com/christinelewis&quot;}, &quot;repo&quot;: {&quot;id&quot;: 1, &quot;name&quot;: &quot;kelly/esse&quot;, &quot;url&quot;: &quot;https://github.com/kelly/esse&quot;}, &quot;created_at&quot;: &quot;2018-12-28 01:29:02&quot;}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.createEvent(com.hackerrank.github.model.Event)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {&quot;id&quot;:1,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:3,&quot;login&quot;:&quot;christinelewis&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/5
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventById(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyRepoId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{&quot;id&quot;:1,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:3,&quot;login&quot;:&quot;christinelewis&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null},{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/3
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyRepoId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/actors/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null},{&quot;id&quot;:4,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:2,&quot;name&quot;:&quot;padilla/magnam&quot;,&quot;url&quot;:&quot;https://github.com/padilla/magnam&quot;},&quot;createdAt&quot;:null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/actors/4
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorId(java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/1/actors/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorAndRepoId(java.lang.Long,java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{&quot;id&quot;:3,&quot;type&quot;:&quot;PushEvent&quot;,&quot;actor&quot;:{&quot;id&quot;:1,&quot;login&quot;:&quot;michael14&quot;,&quot;avatar&quot;:null},&quot;repo&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;kelly/esse&quot;,&quot;url&quot;:&quot;https://github.com/kelly/esse&quot;},&quot;createdAt&quot;:null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/4/actors/5
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorAndRepoId(java.lang.Long,java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/4/actors/1
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorAndRepoId(java.lang.Long,java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events/repos/1/actors/5
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.EventsController
           Method = org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.EventsController.getEventsbyActorAndRepoId(java.lang.Long,java.lang.Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method &apos;GET&apos; not supported
          Headers = {Allow=[POST]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /erase
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.github.controller.ResourcesController
           Method = public org.springframework.http.ResponseEntity&lt;java.lang.Object&gt; com.hackerrank.github.controller.ResourcesController.createEvent()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /events
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method &apos;GET&apos; not supported
          Headers = {Allow=[POST]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

&amp;#27;[0;31mfindAllEvents(com.hackerrank.github.requests.NoResourcesEventsControllerTest)&amp;#27;[0m
&amp;#27;[0;31mjava.lang.AssertionError: Status expected:&lt;200&gt; but was:&lt;405&gt;&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:55)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:82)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:619)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:195)&amp;#27;[0m
&amp;#27;[0;31m	at com.hackerrank.github.requests.NoResourcesEventsControllerTest.findAllEvents(NoResourcesEventsControllerTest.java:74)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/java.lang.reflect.Method.invoke(Method.java:567)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks.evaluate(RunPrepareTestInstanceCallbacks.java:64)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.SpringFailOnTimeout.evaluate(SpringFailOnTimeout.java:87)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.RunRules.evaluate(RunRules.java:20)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.statements.ProfileValueChecker.evaluate(ProfileValueChecker.java:103)&amp;#27;[0m
&amp;#27;[0;31m	at org.springframework.test.context.junit4.rules.SpringClassRule$TestContextManagerCacheEvictor.evaluate(SpringClassRule.java:190)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.rules.RunRules.evaluate(RunRules.java:20)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.Suite.runChild(Suite.java:128)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.Suite.runChild(Suite.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&amp;#27;[0m
&amp;#27;[0;31m	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&amp;#27;[0m
&amp;#27;[0;31m	at java.base/java.lang.reflect.Method.invoke(Method.java:567)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)&amp;#27;[0m
&amp;#27;[0;31m	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="com.hackerrank.github.requests.NoResourcesEventsControllerTest" name="findAllEventsByNonExistingRepoIdAndNonExistingActorId" time="0"/>
  <testcase classname="com.hackerrank.github.requests.NoResourcesEventsControllerTest" name="findAllEventsByNonExistingActorId" time="0"/>
  <testcase classname="com.hackerrank.github.requests.NoResourcesEventsControllerTest" name="findAllEventsByNonExistingRepoId" time="0"/>
  <testcase classname="com.hackerrank.github.requests.NoResourcesEventsControllerTest" name="findEventByNonExistingId" time="0.002"/>
  <testcase classname="com.hackerrank.github.requests.NoResourcesEventsControllerTest" name="createEvent" time="0.003"/>
  <testcase classname="com.hackerrank.github.requests.NoResourcesEventsControllerTest" name="createEventWithExistingId" time="0.003"/>
</testsuite>